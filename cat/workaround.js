let originalRevokeObjectURLFunction = null;
function disableURLRevokeObjectURL() {
  if (originalRevokeObjectURLFunction === null) {
    originalRevokeObjectURLFunction = URL.revokeObjectURL;
    URL.revokeObjectURL = (url) => {
      console.log(`Url ${url} has been requested to be revoked. This request has been cancelled.`);
    };
    console.log("URL.revokeObjectURL has been disabled");
  }
}
function enableURLRevokeObjectURL() {
  if (originalRevokeObjectURLFunction === null) {
    throw new Error("URL.revokeObjectURL has not been disabled");
  }
  URL.revokeObjectURL = originalRevokeObjectURLFunction;
  originalRevokeObjectURLFunction = null;
  console.log("URL.revokeObjectURL has been enabled");
}
function autocomplete(data, flags) {
  return ["--runHUDAndDaemon"];
}
function main(ns) {
  disableURLRevokeObjectURL();
  const config = ns.flags([
    ["runHUDAndDaemon", false]
  ]);
  if (config.runHUDAndDaemon) {
    ns.run("customHUD.js");
    ns.run("daemon.js", 1, "--maintainCorporation");
  }
}
export {
  autocomplete,
  disableURLRevokeObjectURL,
  enableURLRevokeObjectURL,
  main
};
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsiLi4vc3JjL3dvcmthcm91bmQudHMiXSwKICAic291cmNlc0NvbnRlbnQiOiBbIi8qKlxyXG4gKiBEbyBOT1QgaW1wb3J0IGFueSBzY3JpcHQgZXhjZXB0IEBuc1xyXG4gKi9cclxuaW1wb3J0IHtBdXRvY29tcGxldGVEYXRhLCBOU30gZnJvbSBcIkBuc1wiO1xyXG5cclxubGV0IG9yaWdpbmFsUmV2b2tlT2JqZWN0VVJMRnVuY3Rpb246ICgodXJsOiBzdHJpbmcpID0+IHZvaWQpIHwgbnVsbCA9IG51bGw7XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gZGlzYWJsZVVSTFJldm9rZU9iamVjdFVSTCgpIHtcclxuICAgIGlmIChvcmlnaW5hbFJldm9rZU9iamVjdFVSTEZ1bmN0aW9uID09PSBudWxsKSB7XHJcbiAgICAgICAgb3JpZ2luYWxSZXZva2VPYmplY3RVUkxGdW5jdGlvbiA9IFVSTC5yZXZva2VPYmplY3RVUkw7XHJcbiAgICAgICAgVVJMLnJldm9rZU9iamVjdFVSTCA9ICh1cmw6IHN0cmluZykgPT4ge1xyXG4gICAgICAgICAgICBjb25zb2xlLmxvZyhgVXJsICR7dXJsfSBoYXMgYmVlbiByZXF1ZXN0ZWQgdG8gYmUgcmV2b2tlZC4gVGhpcyByZXF1ZXN0IGhhcyBiZWVuIGNhbmNlbGxlZC5gKTtcclxuICAgICAgICB9O1xyXG4gICAgICAgIGNvbnNvbGUubG9nKFwiVVJMLnJldm9rZU9iamVjdFVSTCBoYXMgYmVlbiBkaXNhYmxlZFwiKTtcclxuICAgIH1cclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIGVuYWJsZVVSTFJldm9rZU9iamVjdFVSTCgpIHtcclxuICAgIGlmIChvcmlnaW5hbFJldm9rZU9iamVjdFVSTEZ1bmN0aW9uID09PSBudWxsKSB7XHJcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiVVJMLnJldm9rZU9iamVjdFVSTCBoYXMgbm90IGJlZW4gZGlzYWJsZWRcIik7XHJcbiAgICB9XHJcbiAgICBVUkwucmV2b2tlT2JqZWN0VVJMID0gb3JpZ2luYWxSZXZva2VPYmplY3RVUkxGdW5jdGlvbjtcclxuICAgIG9yaWdpbmFsUmV2b2tlT2JqZWN0VVJMRnVuY3Rpb24gPSBudWxsO1xyXG4gICAgY29uc29sZS5sb2coXCJVUkwucmV2b2tlT2JqZWN0VVJMIGhhcyBiZWVuIGVuYWJsZWRcIik7XHJcbn1cclxuXHJcbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tdW51c2VkLXZhcnNcclxuZXhwb3J0IGZ1bmN0aW9uIGF1dG9jb21wbGV0ZShkYXRhOiBBdXRvY29tcGxldGVEYXRhLCBmbGFnczogc3RyaW5nW10pOiBzdHJpbmdbXSB7XHJcbiAgICByZXR1cm4gW1wiLS1ydW5IVURBbmREYWVtb25cIl07XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBtYWluKG5zOiBOUyk6IHZvaWQge1xyXG4gICAgZGlzYWJsZVVSTFJldm9rZU9iamVjdFVSTCgpO1xyXG5cclxuICAgIGNvbnN0IGNvbmZpZyA9IG5zLmZsYWdzKFtcclxuICAgICAgICBbXCJydW5IVURBbmREYWVtb25cIiwgZmFsc2VdXHJcbiAgICBdKTtcclxuICAgIGlmIChjb25maWcucnVuSFVEQW5kRGFlbW9uKSB7XHJcbiAgICAgICAgbnMucnVuKFwiY3VzdG9tSFVELmpzXCIpO1xyXG4gICAgICAgIG5zLnJ1bihcImRhZW1vbi5qc1wiLCAxLCBcIi0tbWFpbnRhaW5Db3Jwb3JhdGlvblwiKTtcclxuICAgIH1cclxufVxyXG4iXSwKICAibWFwcGluZ3MiOiAiQUFLQSxJQUFJLGtDQUFrRTtBQUUvRCxTQUFTLDRCQUE0QjtBQUN4QyxNQUFJLG9DQUFvQyxNQUFNO0FBQzFDLHNDQUFrQyxJQUFJO0FBQ3RDLFFBQUksa0JBQWtCLENBQUMsUUFBZ0I7QUFDbkMsY0FBUSxJQUFJLE9BQU8sR0FBRyxxRUFBcUU7QUFBQSxJQUMvRjtBQUNBLFlBQVEsSUFBSSx1Q0FBdUM7QUFBQSxFQUN2RDtBQUNKO0FBRU8sU0FBUywyQkFBMkI7QUFDdkMsTUFBSSxvQ0FBb0MsTUFBTTtBQUMxQyxVQUFNLElBQUksTUFBTSwyQ0FBMkM7QUFBQSxFQUMvRDtBQUNBLE1BQUksa0JBQWtCO0FBQ3RCLG9DQUFrQztBQUNsQyxVQUFRLElBQUksc0NBQXNDO0FBQ3REO0FBR08sU0FBUyxhQUFhLE1BQXdCLE9BQTJCO0FBQzVFLFNBQU8sQ0FBQyxtQkFBbUI7QUFDL0I7QUFFTyxTQUFTLEtBQUssSUFBYztBQUMvQiw0QkFBMEI7QUFFMUIsUUFBTSxTQUFTLEdBQUcsTUFBTTtBQUFBLElBQ3BCLENBQUMsbUJBQW1CLEtBQUs7QUFBQSxFQUM3QixDQUFDO0FBQ0QsTUFBSSxPQUFPLGlCQUFpQjtBQUN4QixPQUFHLElBQUksY0FBYztBQUNyQixPQUFHLElBQUksYUFBYSxHQUFHLHVCQUF1QjtBQUFBLEVBQ2xEO0FBQ0o7IiwKICAibmFtZXMiOiBbXQp9Cg==
